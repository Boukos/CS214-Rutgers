int a = 2;
int * p = &a;

p = p+1;

printf("%X\n", p);

&a ... 0x100201AF

0x100201B0


short <= int <= long

char = 1

---
"union"
long c = 2;
int * p = (int*)&c;
char * q = (char*)&c;

---

int pid = fork();

if( pid == 0) {
	exec("./newcode");
}


wait( ) ... wait for child process to be done running



Zombie process - process that is done running, no executable code, whose parent has not yet waited on it

Orphan process - a process whose parent no longer is in the system

Zombie orphan - process that is done running, no executable code, who has no parent to wait on it

pid
ppid

Init - pid 0
(unforked)


********************************************************************************************
Exceptional Computation:
	Exceptions: instructions that can not be run
	
	Interrupts: stop computation for something important (events)
		Hardware:	
		Software:
	
	Trap: voluntarily give up control of computation - and have the OS run some of its code on your behalf
		* (i.e. "system call")
		* kernel, shell
		* A type of call. D data. Make system call.
		
				
Signals:
	software interrupts that may be caused by hardware or software events

char array[] = "anA";	
	
write(STDOUT, array, 4)





void (*signal ( int sig, void (*handler) (int)) ) (int);







*******************************************************************
System Call List:
System calls can be roughly grouped into five major categories:

Process Control
	load
	execute
	end, abort
	create process (for example, fork on Unix-like systems, or NtCreateProcess in the Windows NT Native API)
	terminate process
	get/set process attributes
	wait for time, wait event, signal event
	allocate, free memory
File management
	create file, delete file
	open, close
	read, write, reposition
	get/set file attributes
Device Management
	request device, release device
	read, write, reposition
	get/set device attributes
	logically attach or detach devices
Information Maintenance
	get/set time or date
	get/set system data
	get/set process, file, or device attributes
Communication
	create, delete communication connection
	send, receive messages
	transfer status information
	attach or detach remote devices